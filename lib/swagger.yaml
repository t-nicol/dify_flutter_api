openapi: 3.0.0
info:
  title: Dify Chat App API
  description: API for advanced chat applications with session persistence, file uploads, and multimodal capabilities
  version: 1.0.0
servers:
  - url: https://{host}:{port}/{basePath}
    description: Customizable server
    variables:
      host:
        default: dify.supa.vn
        description: API host (no protocol)
      port:
        enum:
          - "80"
          - "443"
        default: "443"
      basePath:
        default: "v1"
        enum:
          - "v1"
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Message:
      type: object
      properties:
        id:
          type: string
          description: Message ID
        conversation_id:
          type: string
          description: Conversation ID
        inputs:
          type: object
          description: User input parameters
        query:
          type: string
          description: User input/question content
        message_files:
          type: array
          items:
            $ref: '#/components/schemas/MessageFile'
        answer:
          type: string
          description: Response message content
        created_at:
          type: integer
          format: int64
          description: Creation timestamp
        feedback:
          type: object
          properties:
            rating:
              type: string
              enum: [like, dislike]
        reference_resources:
          type: array
          items:
            $ref: '#/components/schemas/RetrieverResource'
    MessageFile:
      type: object
      properties:
        id:
          type: string
          description: File ID
        type:
          type: string
          description: File type (image for images)
        url:
          type: string
          description: Preview image URL
        belongs_to:
          type: string
          description: Belongs to (user or assistant)
    RetrieverResource:
      type: object
      properties:
        position:
          type: integer
        dataset_id:
          type: string
        dataset_name:
          type: string
        document_id:
          type: string
        document_name:
          type: string
    Usage:
      type: object
      properties:
        prompt_tokens:
          type: integer
        prompt_unit_price:
          type: string
        prompt_price:
          type: string
        completion_tokens:
          type: integer
        completion_unit_price:
          type: string
        completion_price:
          type: string
        total_tokens:
          type: integer
        total_price:
          type: string
        currency:
          type: string
        latency:
          type: number
    Conversation:
      type: object
      properties:
        id:
          type: string
          description: Conversation ID
        name:
          type: string
          description: Conversation name
        inputs:
          type: object
          description: User input parameters
        status:
          type: string
          description: Conversation status
        introduction:
          type: string
        created_at:
          type: integer
          format: int64
          description: Creation timestamp
        updated_at:
          type: integer
          format: int64
          description: Update timestamp
    FileUploadResponse:
      type: object
      properties:
        id:
          type: string
          description: File ID
        name:
          type: string
          description: File name
        size:
          type: integer
          description: File size in bytes
        extension:
          type: string
          description: File extension
        mime_type:
          type: string
          description: File mime-type
        created_by:
          type: string
          description: End-user ID
        created_at:
          type: integer
          format: int64
          description: Creation timestamp
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
    ChatRequest:
      type: object
      properties:
        input:
          type: object
          description: Variable values defined by the App
          default: {}
        query:
          type: string
          description: User input/question content
        response_mode:
          type: string
          enum: [streaming, blocking]
          description: Response return mode
        user:
          type: string
          description: User identifier
        conversation_id:
          type: string
          description: Conversation ID
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileInput'
        auto_generate_name:
          type: boolean
          description: Auto-generate title
          default: true
    FileInput:
      type: object
      properties:
        type:
          type: string
          enum: [text, image, audio, video, custom]
          description: File type
        transfer_method:
          type: string
          enum: [remote_url, upload_file]
          description: Transfer method
        url:
          type: string
          description: Image URL (when transfer_method is remote_url)
        upload_file_id:
          type: string
          description: Uploaded file ID (when transfer_method is upload_file)
    FeedbackRequest:
      type: object
      properties:
        rating:
          type: string
          enum: [like, dislike]
          description: Feedback rating
        user:
          type: string
          description: User identifier
        content:
          type: string
          description: Feedback content
    ConversationRenameRequest:
      type: object
      properties:
        name:
          type: string
          description: New conversation name
        auto_generate:
          type: boolean
          description: Automatically generate title
          default: false
        user:
          type: string
          description: User identifier
    AudioToTextRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
          description: Audio file
        user:
          type: string
          description: User identifier
    TextToAudioRequest:
      type: object
      properties:
        message_id:
          type: string
          description: Message ID
        text:
          type: string
          description: Text content
        user:
          type: string
          description: User identifier

paths:
  /chat-messages:
    post:
      summary: Send chat message
      description: Send a request to the chat application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message_id:
                    type: string
                    description: Unique message ID
                  conversation_id:
                    type: string
                    description: Conversation ID
                  answer:
                    type: string
                    description: Response content
                  metadata:
                    type: object
                    properties:
                      usage:
                        $ref: '#/components/schemas/Usage'
                      retriever_resources:
                        type: array
                        items:
                          $ref: '#/components/schemas/RetrieverResource'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /files/upload:
    post:
      summary: Upload file
      description: Upload a file for use when sending messages
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to be uploaded
                user:
                  type: string
                  description: User identifier
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: File too large
        '415':
          description: Unsupported file type
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /chat-messages/{message_id}/stop:
    post:
      summary: Stop message generation
      description: Stop generating a message (only in streaming mode)
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: User identifier
      responses:
        '200':
          description: Successfully stopped
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /chat-messages/{message_id}/feedbacks:
    post:
      summary: Submit message feedback
      description: Provide feedback for a message
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
      responses:
        '200':
          description: Feedback submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /messages/{message_id}/suggested-questions:
    get:
      summary: Get suggested questions
      description: Get next question suggestions for the current message
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: User identifier
      responses:
        '200':
          description: Successfully retrieved suggested questions
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /messages:
    get:
      summary: Get conversation history
      description: Returns historical chat records in a scrolling load format
      parameters:
        - name: conversation_id
          in: query
          required: true
          schema:
            type: string
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: User identifier
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
          description: Number of messages to return
        - name: last_id
          in: query
          schema:
            type: string
          description: ID of the first chat record on the current page
      responses:
        '200':
          description: Successfully retrieved messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  limit:
                    type: integer
                  has_more:
                    type: boolean
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /conversations:
    get:
      summary: Get conversations
      description: Retrieve the conversation list for the current user
      parameters:
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: User identifier
        - name: last_id
          in: query
          schema:
            type: string
          description: ID of the last record on the current page
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
            minimum: 1
          description: Number of records to return
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [created_at, -created_at, updated_at, -updated_at]
            default: -updated_at
          description: Sorting field
      responses:
        '200':
          description: Successfully retrieved conversations
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Conversation'
                  limit:
                    type: integer
                  has_more:
                    type: boolean
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /conversations/{conversation_id}:
    delete:
      summary: Delete conversation
      description: Delete a conversation
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: User identifier
      responses:
        '200':
          description: Conversation deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /conversations/{conversation_id}/name:
    post:
      summary: Rename conversation
      description: Rename a conversation
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationRenameRequest'
      responses:
        '200':
          description: Conversation renamed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  inputs:
                    type: object
                  status:
                    type: string
                  introduction:
                    type: string
                  created_at:
                    type: integer
                    format: int64
                  updated_at:
                    type: integer
                    format: int64
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /audio-to-text:
    post:
      summary: Convert speech to text
      description: Convert audio file to text
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AudioToTextRequest'
      responses:
        '200':
          description: Successfully converted audio to text
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /text-to-audio:
    post:
      summary: Convert text to audio
      description: Convert text to speech
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextToAudioRequest'
      responses:
        '200':
          description: Successfully converted text to audio
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /meta:
    get:
      summary: Get application meta information
      description: Get icons of tools in this application
      responses:
        '200':
          description: Successfully retrieved meta information
          content:
            application/json:
              schema:
                type: object
                properties:
                  tool_icons:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        background:
                          type: string
                          description: Background color in hex format
                        content:
                          type: string
                          description: Emoji
                  app_name:
                    type: string